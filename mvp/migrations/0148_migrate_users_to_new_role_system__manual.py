# Generated by Django 4.2.23 on 2025-08-04 11:09

from django.db import migrations


def migrate_users_and_invitations_to_new_roles(apps, schema_editor):
    """
    Migrate existing users and invitations from old roles to new User role.
    Users who were Owner remain Owner, all others become User.
    """
    CustomUser = apps.get_model("mvp", "CustomUser")
    UserInvitation = apps.get_model("mvp", "UserInvitation")
    Group = apps.get_model("auth", "Group")

    user_group, created = Group.objects.get_or_create(name="User")

    # Get old role groups that should be migrated
    old_role_names = ["SettingsEditor", "EngineeringLeader", "Developer", "ComplianceLeader"]
    old_groups = Group.objects.filter(name__in=old_role_names)

    # Migrate users from old roles to User role
    users_to_migrate = CustomUser.objects.filter(groups__in=old_groups).distinct()
    
    for user in users_to_migrate:
        # Remove old role groups
        user.groups.remove(*old_groups)
        # Add User group
        user.groups.add(user_group)

    # Migrate user invitations from old roles to User role
    invitations_to_migrate = UserInvitation.global_objects.filter(role__in=old_groups)
    
    invitation_count = 0
    for invitation in invitations_to_migrate:
        invitation.role = user_group
        invitation.save()
        invitation_count += 1



def reverse_migration(apps, schema_editor):
    """
    Reverse migration by moving User role users back to Settings Editor role.
    This is a best-effort reversal as we can't perfectly restore original roles.
    """
    CustomUser = apps.get_model("mvp", "CustomUser")
    UserInvitation = apps.get_model("mvp", "UserInvitation")
    Group = apps.get_model("auth", "Group")

    try:
        user_group = Group.objects.get(name="User")
        settings_editor_group = Group.objects.get(name="SettingsEditor")
    except Group.DoesNotExist:
        return None

    # Move users from User role back to Settings Editor
    users_to_reverse = CustomUser.objects.filter(groups=user_group)
    for user in users_to_reverse:
        user.groups.remove(user_group)
        user.groups.add(settings_editor_group)

    # Move invitations from User role back to Settings Editor
    invitations_to_reverse = UserInvitation.global_objects.filter(role=user_group)
    for invitation in invitations_to_reverse:
        invitation.role = settings_editor_group
        invitation.save()

    # Remove User group from auth_group table
    user_group.delete()


class Migration(migrations.Migration):

    dependencies = [
        ("mvp", "0147_messageintegration"),
    ]

    operations = [
        migrations.RunPython(
            migrate_users_and_invitations_to_new_roles,
            reverse_migration,
        ),
    ]
