# Generated by Django 4.2.4 on 2023-08-24 15:57

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataProviderField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True, default=None, max_length=500, null=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mvp.dataprovider')),
            ],
        ),
        migrations.CreateModel(
            name='DataProviderProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('external_id', models.CharField(max_length=100)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mvp.dataprovider')),
            ],
            options={
                'unique_together': {('provider', 'external_id')},
            },
        ),
        migrations.CreateModel(
            name='ReferenceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_id', models.PositiveIntegerField(unique=True)),
                ('org_name', models.CharField(max_length=100)),
                ('segment', models.CharField(choices=[('Enterprise-level', 'Enterprise-level'), ('Giants', 'Giants'), ('Growth', 'Growth'), ('Mature', 'Mature'), ('Mid-sized', 'Mid-sized'), ('Small Established', 'Small Established'), ('Young with big codebase', 'Young with big codebase'), ('Young with small codebase', 'Young with small codebase')], max_length=30)),
                ('low_risk', models.PositiveIntegerField(verbose_name='low SAST warnings')),
                ('medium_high_risk', models.PositiveIntegerField(verbose_name='medium AND high SAST warnings')),
                ('critical_risk', models.PositiveIntegerField(verbose_name='critical SAST warnings')),
                ('commit_change_rate', models.IntegerField()),
                ('development_activity_change_rate', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DataProviderRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('date_time', models.DateTimeField()),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mvp.dataproviderfield')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mvp.dataproviderproject')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
