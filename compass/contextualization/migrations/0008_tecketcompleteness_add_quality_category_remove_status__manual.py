# Generated by Django 4.2.23 on 2025-07-03 16:21

from django.db import migrations, models

def update_quality_category(apps, schema_editor):
    TicketCompleteness = apps.get_model("contextualization", "TicketCompleteness")
    
    TicketCompleteness.objects.filter(completeness_score__lte=25, quality_category=None).update(quality_category="Initial")
    TicketCompleteness.objects.filter(completeness_score__lte=50, quality_category=None).update(quality_category="Emerging")
    TicketCompleteness.objects.filter(completeness_score__lte=75, quality_category=None).update(quality_category="Mature")
    TicketCompleteness.objects.filter(completeness_score__lte=100, quality_category=None).update(quality_category="Advanced")

def reverse_update_quality_category(apps, schema_editor):
    TicketCompleteness = apps.get_model("contextualization", "TicketCompleteness")
    
    # Clear the quality_category field when rolling back
    TicketCompleteness.objects.all().update(quality_category=None)

class Migration(migrations.Migration):

    dependencies = [
        ("mvp", "0145_repository_default_branch_name"),
        ("contextualization", "0007_ticketcompleteness"),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name="ticketcompleteness",
            unique_together={("ticket_id", "project", "date")},
        ),
        migrations.AddField(
            model_name="ticketcompleteness",
            name="quality_category",
            field=models.TextField(
                choices=[
                    ("Initial", "Initial"),
                    ("Emerging", "Emerging"),
                    ("Mature", "Mature"),
                    ("Advanced", "Advanced"),
                    ("Uncategorized", "Uncategorized"),
                ],
                null=True,
            ),
        ),
        migrations.RunPython(update_quality_category, reverse_update_quality_category),
        migrations.RemoveField(
            model_name="ticketcompleteness",
            name="status",
        ),
    ]
