# Generated by Django 4.2.23 on 2025-07-16 12:47

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("mvp", "0145_repository_default_branch_name"),
        (
            "contextualization",
            "0010_initiative_custom_name_initiative_disabled_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="AnomalyInsights",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("anomaly_id", models.TextField()),
                (
                    "anomaly_type",
                    models.CharField(
                        choices=[("git", "Git"), ("jira", "Jira")], max_length=10
                    ),
                ),
                ("title", models.TextField()),
                ("insight", models.TextField()),
                ("evidence", models.TextField()),
                ("significance_score", models.IntegerField()),
                (
                    "confidence_level",
                    models.CharField(
                        choices=[
                            ("High", "High"),
                            ("Medium", "Medium"),
                            ("Low", "Low"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("timeline_impact", "Timeline Impact"),
                            ("quality_impact", "Quality Impact"),
                            ("scope_impact", "Scope Impact"),
                            ("resource_impact", "Resource Impact"),
                            ("technical_impact", "Technical Impact"),
                            ("feature_addition", "Feature Addition"),
                            ("feature_enhancement", "Feature Enhancement"),
                            ("other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "ticket_categories",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("Bug", "Bug"),
                                ("Story", "Story"),
                                ("Incident", "Incident"),
                                ("Request", "Request"),
                                ("Manual Testing", "Manual Testing"),
                                ("Automated Testing", "Automated Testing"),
                                ("Other", "Other"),
                            ],
                            max_length=255,
                        ),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "source_tickets",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "source_commits",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=255),
                        blank=True,
                        default=list,
                        size=None,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mvp.jiraproject",
                    ),
                ),
                (
                    "repository",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="mvp.repository",
                    ),
                ),
            ],
            options={
                "unique_together": {("anomaly_id", "project")},
            },
        ),
    ]
